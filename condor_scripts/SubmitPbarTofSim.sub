trap_wall = 150
trap_floor = 110
thermalised = True
iterations = 20
N = 25000
executable = SimulateTof.sh
arguments  = $(ClusterId) $(ProcId) --trap_wall_V $(trap_wall) --trap_floor_V $(trap_floor) --spacecharge_min_V $(spacecharge_min) --spacecharge_max_V $(spacecharge_max) --thermalised $(thermalised) --N_particles $(N) --iterations $(iterations) --savedata_mask 0x01 --plot_mask 0x1f --showfig False --savefig True --fig_format png --verbose_level 3 tof_pbar
output     = output/$(executable).tof_pbar.$(ClusterId).$(ProcId).out
error      = error/$(executable).tof_pbar.$(ClusterId).$(ProcId).err
log        = log/$(executable).tof_pbar.$(ClusterId).$(ProcId).log
transfer_input_files = root://eosuser.cern.ch//eos/user/j/jzielins/.local/lib/python3.12/site-packages/, ../calculate_tof.py, ../modules/
output_destination = root://eosuser.cern.ch//eos/user/j/jzielins/tof_simulation/pbar/wall_$(trap_wall)/floor_$(trap_floor)/$(spacecharge_min)-$(spacecharge_max)/
transfer_output_files = data/, plots/
MY.XRDCP_CREATE_DIR = True
+JobFlavour = "testmatch"
queue spacecharge_min spacecharge_max from ./spacecharge_values.csv